apiVersion: v1
kind: ReplicationController
metadata:
  name: $APP_NAME|default:wordpress| Enter your application name$
kuberdock:
  packageID: 0
  preDescription: |
    You are installing the application [b]WordPress[/b].
    The WordPress rich content management system can utilize plugins, widgets, and themes.
    All the components needed for this application correct work will also be installed: [b]MySQL[/b] server.
    Choose the amount of resources or use recommended parameters set by default.
    First choose package.
    When you click "Order now", you will get to order processing page.
  postDescription: |
    You have installed [b]WordPress![/b]
    Please find more information about WordPress software on the official website [url]https://wordpress.com[/url]
    To access [b]WordPress[/b] use this link: [url]http://%PUBLIC_ADDRESS%[/url]
    Your backup frequency is [b]24[/b] hours, backup folder is [b]/backup[/b]
  # required for cPanel to do proxy to user`s domain
  # proxy:
    # root:
      # container: wordpress
      # domain: $APP_DOMAIN|default:user_domain_list|Select application domain$
  appPackages:
    - name: S
      goodFor: beginner
      publicIP: true
      pods:
        -
          name: $APP_NAME$
          kubeType: 0
          containers:
            - name: mysql
              kubes: 6
            - name: wordpress
              kubes: 4
            - name: dbbackup
              kubes: 1
          persistentDisks:
            - name: mysql-persistent-storage
              pdSize: 1
            - name: wordpress-persistent-storage
              pdSize: 1
            - name: backup-persistent-storage
              pdSize: 1
    - name: M
      recommended: yes
      goodFor: regular use
      publicIP: true
      pods:
        -
          name: $APP_NAME$
          kubeType: 1
          containers:
            - name: mysql
              kubes: 6
            - name: wordpress
              kubes: 4
            - name: dbbackup
              kubes: 1
          persistentDisks:
            - name: mysql-persistent-storage
              pdSize: 1
            - name: wordpress-persistent-storage
              pdSize: 1
            - name: backup-persistent-storage
              pdSize: 1
    - name: L
      goodFor: business
      publicIP: true
      pods:
        -
          name: $APP_NAME$
          kubeType: 2
          containers:
            - name: mysql
              kubes: 6
            - name: wordpress
              kubes: 4
            - name: dbbackup
              kubes: 1
          persistentDisks:
            - name: mysql-persistent-storage
              pdSize: 2
            - name: wordpress-persistent-storage
              pdSize: 2
            - name: backup-persistent-storage
              pdSize: 2
spec:
  template:
    metadata:
      labels:
        name: $APP_NAME$
    spec:
      volumes:
        - name: mysql-persistent-storage
          persistentDisk:
            pdName: wordpress_mysql_$PD_RAND|default:autogen|PD rand$
        - name: wordpress-persistent-storage
          persistentDisk:
            pdName: wordpress_www_$PD_RAND$
        - name: backup-persistent-storage
          persistentDisk:
            pdName: backup_$PD_RAND$
      restartPolicy: "Always"
      resolve: [db]
      containers:
        -
          name: mysql
          image: kuberdock/mysql:5.7
          env:
            - name: MYSQL_DATABASE
              value: wordpress
            - name: MYSQL_USER
              value: wordpress
            - name: MYSQL_PASSWORD
              value: $MYSQL_USER_PASSWORD|default:autogen|mysql password$
            - name: MYSQL_ROOT_PASSWORD
              value: $MYSQL_ROOT_PASSWORD|default:autogen|mysql password$
            - name: MYSQL_AUTO_MEMORY_ALLOCATE
              value: $MYSQL_AUTO_MEMORY_ALLOCATE|default:innodb|Please choose default MySQL engine "innodb" or "myisam"$
          ports:
            - containerPort: 3306
          readinessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 5
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-persistent-storage
        -
          name: wordpress
          image: wordpress:4.4.0
          env:
            - name: WORDPRESS_DB_USER
              value: wordpress
            - name: WORDPRESS_DB_PASSWORD
              value: $MYSQL_USER_PASSWORD$
            - name: WORDPRESS_DB_HOST
              value: 127.0.0.1
          ports:
            - containerPort: 80
              isPublic: True
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 5
          volumeMounts:
            - mountPath: /var/www/html
              name: wordpress-persistent-storage
          workingDir: /var/www/html
        -
          name: dbbackup
          image: kuberdock/mysql-backup:5.7
          env:
            - name: DB_USER
              value: wordpress
            - name: DB_PASS
              value: $MYSQL_USER_PASSWORD$
            - name: DB_DUMP_FREQ
              value: "1440"
            - name: DB_DUMP_TARGET
              value: /backup
            - name: DB_DUMP_DEBUG
              value: "true"
          volumeMounts:
            - mountPath: /backup
              name: backup-persistent-storage
          workingDir: /backup
